<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heng.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.heng.domain.Order" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ORDER_CODE" property="orderCode" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="DATE" />
    <result column="SEND_DATE" property="sendDate" jdbcType="DATE" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="AMOUNT" property="amount" jdbcType="DOUBLE" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="orderAndArticleResultMap" type="com.heng.domain.Order" >
	  	<id column="oid" property="id" jdbcType="INTEGER" />
	    <result column="ORDER_CODE" property="orderCode" jdbcType="VARCHAR" />
	    <result column="CREATE_DATE" property="createDate" jdbcType="DATE" />
	    <result column="SEND_DATE" property="sendDate" jdbcType="DATE" />
	    <result column="STATUS" property="status" jdbcType="VARCHAR" />
	    <result column="AMOUNT" property="amount" jdbcType="DOUBLE" />
	    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
	    <!-- 一个订单可以有多个订单详情 -->
	    <collection property="orderItems" ofType="com.heng.domain.OrderItem">
		    <id column="ORDER_ID" property="orderId" jdbcType="INTEGER" />
		    <id column="ARTICLE_ID" property="articleId" jdbcType="INTEGER" />
		    <result column="ORDER_NUM" property="orderNum" jdbcType="INTEGER" />
	    	<!--  一个订单详情对应一件商品 -->
	    	<association property="article" javaType="com.heng.domain.Article">
		    	<id column="ID" property="id" jdbcType="INTEGER" />
			    <result column="article_name" property="articleName" jdbcType="VARCHAR" />
			    <result column="TITLE" property="title" jdbcType="VARCHAR" />
			    <result column="SUPPLIER" property="supplier" jdbcType="VARCHAR" />
			    <result column="PRICE" property="price" jdbcType="DOUBLE" />
			    <result column="LOCALITY" property="locality" jdbcType="VARCHAR" />
			    <result column="PUTAWAY_DATE" property="putawayDate" jdbcType="DATE" />
			    <result column="STORAGE" property="storage" jdbcType="INTEGER" />
			    <result column="IMAGE" property="image" jdbcType="VARCHAR" />
			    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
			    <result column="TYPE_CODE" property="typeCode" jdbcType="VARCHAR" />
			    <result column="CREATE_DATE" property="createDate" jdbcType="DATE" />
	    	</association>
	    </collection>
  </resultMap>
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ORDER_CODE, CREATE_DATE, SEND_DATE, STATUS, AMOUNT, USER_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.heng.domain.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ec_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ec_order
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ec_order
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.heng.domain.OrderExample" >
    delete from ec_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.heng.domain.Order" >
    insert into ec_order (ID, ORDER_CODE, CREATE_DATE, 
      SEND_DATE, STATUS, AMOUNT, 
      USER_ID)
    values (#{id,jdbcType=INTEGER}, #{orderCode,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, 
      #{sendDate,jdbcType=DATE}, #{status,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, 
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.heng.domain.Order" useGeneratedKeys="true" keyProperty="id">
    insert into ec_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="orderCode != null" >
        ORDER_CODE,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="sendDate != null" >
        SEND_DATE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="sendDate != null" >
        #{sendDate,jdbcType=DATE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.heng.domain.OrderExample" resultType="java.lang.Integer" >
    select count(*) from ec_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ec_order
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderCode != null" >
        ORDER_CODE = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        CREATE_DATE = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.sendDate != null" >
        SEND_DATE = #{record.sendDate,jdbcType=DATE},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        AMOUNT = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ec_order
    set ID = #{record.id,jdbcType=INTEGER},
      ORDER_CODE = #{record.orderCode,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=DATE},
      SEND_DATE = #{record.sendDate,jdbcType=DATE},
      STATUS = #{record.status,jdbcType=VARCHAR},
      AMOUNT = #{record.amount,jdbcType=DOUBLE},
      USER_ID = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.heng.domain.Order" >
    update ec_order
    <set >
      <if test="orderCode != null" >
        ORDER_CODE = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=DATE},
      </if>
      <if test="sendDate != null" >
        SEND_DATE = #{sendDate,jdbcType=DATE},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.heng.domain.Order" >
    update ec_order
    set ORDER_CODE = #{orderCode,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=DATE},
      SEND_DATE = #{sendDate,jdbcType=DATE},
      STATUS = #{status,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DOUBLE},
      USER_ID = #{userId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getOrderAndArticle" resultMap="orderAndArticleResultMap">
  
	SELECT 
		o.id oid,
		o.ORDER_CODE,
		o.CREATE_DATE,
		o.SEND_DATE,
		o.`STATUS`,
		o.AMOUNT,
		o.USER_ID,
		i.*,
		a.* 
	FROM
		ec_order as o,
		ec_order_item as i,
		ec_article as a
	WHERE
		o.USER_ID = #{id} 
	and
		i.ORDER_ID = o.ID
	and 
		a.ID = i.ARTICLE_ID
  
  </select>
  
  
  
  
  
</mapper>